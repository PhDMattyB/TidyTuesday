col = 'black') +
scale_fill_gradient2(low = '#00B37E',
mid = '#0BB32A',
high = '#0B8CB3',
midpoint = 30000)
ggplot(data = plot_date) +
geom_polygon(aes(x = long,
y = lat, group = state,
fill = avg_in_tuition),
col = 'black') +
scale_fill_gradient2(low = '#155229',
mid = '#30B85D',
high = '#3ADE70',
midpoint = 30000)
ggplot(data = plot_date) +
geom_polygon(aes(x = long,
y = lat, group = state,
fill = avg_out_tuition),
col = 'black') +
scale_fill_gradient2(low = '#155229',
mid = '#30B85D',
high = '#3ADE70',
midpoint = 30000) +
labs(title = '')
ggplot(data = plot_date) +
geom_polygon(aes(x = long,
y = lat, group = state,
fill = avg_out_tuition),
col = 'black') +
scale_fill_gradient2(name = 'Average tuition',
low = '#155229',
mid = '#30B85D',
high = '#3ADE70',
midpoint = 30000) +
labs(title = '')
ggplot(data = plot_date) +
geom_polygon(aes(x = long,
y = lat, group = state,
fill = avg_out_tuition),
col = 'black') +
scale_fill_gradient2(name = 'Average tuition',
low = '#155229',
mid = '#30B85D',
high = '#3ADE70',
midpoint = 30000) +
labs(title = 'Average out of state tuition per state')+
theme_minimal()
ggplot(data = plot_date) +
geom_polygon(aes(x = long,
y = lat, group = state,
fill = avg_out_tuition),
col = 'black') +
scale_fill_gradient2(name = 'Average tuition',
low = '#155229',
mid = '#30B85D',
high = '#3ADE70',
midpoint = 30000) +
labs(title = 'Average out of state tuition per state')+
theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank())
ggplot(data = plot_date) +
geom_polygon(aes(x = long,
y = lat, group = state,
fill = avg_out_tuition),
col = 'black') +
scale_fill_gradient2(name = 'Average tuition',
low = '#155229',
mid = '#30B85D',
high = '#3ADE70',
midpoint = 30000) +
labs(title = 'Average out of state tuition per state')+
theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank())+
theme_minimal()
ggplot(data = plot_date) +
geom_polygon(aes(x = long,
y = lat, group = state,
fill = avg_out_tuition),
col = 'black') +
scale_fill_gradient2(name = 'Average tuition',
low = '#155229',
mid = '#30B85D',
high = '#3ADE70',
midpoint = 30000) +
labs(title = 'Average out of state tuition per state')+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank())
ggplot(data = plot_date) +
geom_polygon(aes(x = long,
y = lat, group = state,
fill = avg_out_tuition),
col = 'black') +
scale_fill_gradient2(name = 'Average tuition',
low = '#155229',
mid = '#30B85D',
high = '#3ADE70',
midpoint = 30000) +
labs(title = 'Average out of state tuition per state')+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank(),
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0.5))
ggplot(data = plot_date) +
geom_polygon(aes(x = long,
y = lat, group = state,
fill = avg_out_tuition),
col = 'black') +
scale_fill_gradient2(name = 'Average tuition',
low = '#155229',
mid = '#30B85D',
high = '#3ADE70',
midpoint = 30000) +
labs(title = 'Average out of state tuition per state')+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank(),
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0.5),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
ggplot(data = plot_date) +
geom_polygon(aes(x = long,
y = lat, group = state,
fill = avg_out_tuition),
col = 'black') +
scale_fill_gradient2(name = 'Average tuition',
low = '#155229',
mid = '#30B85D',
high = '#3ADE70',
midpoint = 30000) +
labs(title = 'Average out of state tuition')+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank(),
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0.5),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
plot_date
setwd('~/PhD/GitHub/TidyTuesday/Hockey_goals')
theme_set(theme_bw())
## Read in data
# game_goals = read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-03/game_goals.csv')
# top_250 = read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-03/top_250.csv')
season_goals = read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-03/season_goals.csv')
short_data = season_goals %>%
select(player,
rank,
penalty_min,
yr_start,
total_goals)
ggplot(data = short_data,
aes(x = yr_start,
y = penalty_min)) +
geom_hex()+
scale_fill_gradient(low = '#59B389',
high = '#FFADA1')+
labs(x = 'Year season started',
y = 'Penalty minutes') +
theme(panel.grid = element_blank(),
axis.title = element_text(size = 15),
axis.text = element_text(size = 15))
setwd('~/PhD/GitHub/TidyTuesday/College_tuition/')
theme_set(theme_bw())
tuition_cost = read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
tuition_income = read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_income.csv')
salary_potential = read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/salary_potential.csv') %>%
rename(state = state_name)
historical_tuition = read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/historical_tuition.csv')
diversity_school = read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/diversity_school.csv')
## create a data set for cost per state
state_cost = tuition_cost %>%
group_by(state) %>%
summarise(avg_in_tuition = mean(in_state_total),
avg_out_tuition = mean(out_of_state_total))
map_states = map_data('state') %>%
as_tibble() %>%
rename(state = region) %>%
select(-order)
## state names in the map data is lower case,
## change the state names in the dataframe to lower case
state_cost$state = str_to_lower(sate_cost$state, locale = 'en')
plot_date = inner_join(state_cost,
map_states) %>%
distinct()
ggplot(data = plot_date) +
geom_polygon(aes(x = long,
y = lat, group = state,
fill = avg_out_tuition),
col = 'black') +
scale_fill_gradient2(name = 'Average tuition',
low = '#155229',
mid = '#30B85D',
high = '#3ADE70',
midpoint = 30000) +
labs(title = 'Average out of state tuition')+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank(),
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0.5),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
plot1 = ggplot(data = plot_date) +
geom_polygon(aes(x = long,
y = lat, group = state,
fill = avg_out_tuition),
col = 'black') +
scale_fill_gradient2(name = 'Average tuition',
low = '#155229',
mid = '#30B85D',
high = '#3ADE70',
midpoint = 30000) +
labs(title = 'Average out of state tuition')+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank(),
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0.5),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
## create a dataset for tuition cost and pay in career
cost_pay = left_join(tuition_cost,
salary_potential,
by = c('name',
'state')) %>%
select(name,
state,
in_state_total,
out_of_state_total,
early_career_pay,
mid_career_pay,
type) %>%
na.omit()
cost_pay
## create a dataset for tuition cost and pay in career
cost_pay = left_join(tuition_cost,
salary_potential,
by = c('name',
'state')) %>%
select(name,
state,
in_state_total,
out_of_state_total,
early_career_pay,
mid_career_pay,
type) %>%
na.omit() %>%
group_by(state)
cost_pay
cost_data = inner_join(cost_pay,
map_states) %>%
distinct()
cost_data
cost_pay$state = str_to_lower(cost_pay$state)
cost_pay
cost_data = inner_join(cost_pay,
map_states) %>%
distinct()
## create a dataset for tuition cost and pay in career
cost_pay = left_join(tuition_cost,
salary_potential,
by = c('name',
'state')) %>%
select(name,
state,
in_state_total,
out_of_state_total,
early_career_pay,
mid_career_pay,
type) %>%
na.omit() %>%
group_by(state)
cost_pay
ggplot(data = cost_pay)+
geom_line(x = out_of_state_total,
y = early_career_pay)
## create a dataset for tuition cost and pay in career
cost_pay = left_join(tuition_cost,
salary_potential,
by = c('name',
'state')) %>%
select(name,
state,
in_state_total,
out_of_state_total,
early_career_pay,
mid_career_pay,
type) %>%
na.omit()
cost_pay
View(cost_pay)
ggplot(data = cost_pay)+
geom_line(x = out_of_state_total,
y = early_career_pay)
ggplot(data = cost_pay)+
geom_line(aes(x = out_of_state_total,
y = early_career_pay))
ggplot(data = cost_pay)+
geom_line(aes(x = out_of_state_total,
y = early_career_pay))+
geom_line(aes(x = out_of_state_total,
y = mid_career_pay))
ggplot(data = cost_pay)+
geom_line(aes(x = out_of_state_total,
y = early_career_pay),
col = '#1283B8')+
geom_line(aes(x = out_of_state_total,
y = mid_career_pay),
col = '#E00211')
ggplot(data = cost_pay)+
geom_line(aes(x = out_of_state_total,
y = early_career_pay),
col = '#1283B8')+
geom_line(aes(x = out_of_state_total,
y = mid_career_pay),
col = '#E00211') +
labs(title = 'Relationship between tuition and projected pay',
x = 'Tuition',
y = 'Amount of pay')+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank(),
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0.5),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
ggplot(data = cost_pay)+
geom_line(aes(x = out_of_state_total,
y = early_career_pay),
col = '#1283B8')+
geom_line(aes(x = out_of_state_total,
y = mid_career_pay),
col = '#E00211') +
labs(title = 'Relationship between tuition and projected pay',
x = 'Tuition',
y = 'Amount of pay')+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0.5),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
ggplot(data = cost_pay)+
geom_line(aes(x = out_of_state_total,
y = early_career_pay),
col = '#1283B8')+
geom_line(aes(x = out_of_state_total,
y = mid_career_pay),
col = '#E00211') +
labs(title = 'Relationship between tuition and projected pay',
x = 'Tuition',
y = 'Amount of pay')+
# theme_minimal()+
theme(panel.grid = element_blank(),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0.5),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
ggplot(data = cost_pay)+
geom_line(aes(x = out_of_state_total,
y = early_career_pay),
col = '#1283B8')+
geom_line(aes(x = out_of_state_total,
y = mid_career_pay),
col = '#E00211') +
labs(title = 'Relationship between tuition and projected pay',
x = 'Tuition',
y = 'Amount of pay')+
theme_classic()+
theme(panel.grid = element_blank(),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0.5),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
ggplot(data = cost_pay)+
geom_line(aes(x = out_of_state_total,
y = early_career_pay),
col = '#1283B8')+
geom_line(aes(x = out_of_state_total,
y = mid_career_pay),
col = '#E00211') +
labs(title = 'Relationship between tuition and projected pay',
x = 'Amount of tuition',
y = 'Amount of pay')+
theme_classic()+
theme(panel.grid = element_blank(),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0.5),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
plot2 = ggplot(data = cost_pay)+
geom_line(aes(x = out_of_state_total,
y = early_career_pay),
col = '#1283B8')+
geom_line(aes(x = out_of_state_total,
y = mid_career_pay),
col = '#E00211') +
labs(title = 'Relationship between tuition and projected pay',
x = 'Amount of tuition',
y = 'Amount of pay')+
theme_classic()+
theme(panel.grid = element_blank(),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0.5),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
plot1/plot2
plot2 = ggplot(data = cost_pay)+
geom_line(aes(x = out_of_state_total,
y = early_career_pay),
col = '#1283B8')+
geom_line(aes(x = out_of_state_total,
y = mid_career_pay),
col = '#E00211') +
labs(title = 'Relationship between tuition and projected pay',
subtitle = 'Early career pay in blue and mid career pay in red',
x = 'Amount of tuition',
y = 'Amount of pay')+
theme_classic()+
theme(panel.grid = element_blank(),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0.5),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
plot1/plot2
plot2 = ggplot(data = cost_pay)+
geom_line(aes(x = out_of_state_total,
y = early_career_pay),
col = '#1283B8')+
geom_line(aes(x = out_of_state_total,
y = mid_career_pay),
col = '#E00211') +
labs(title = 'Relationship between tuition and projected pay',
subtitle = 'Early career pay in blue \n mid career pay in red',
x = 'Amount of tuition',
y = 'Amount of pay')+
theme_classic()+
theme(panel.grid = element_blank(),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0.5),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
plot1/plot2
plot2 = ggplot(data = cost_pay)+
geom_line(aes(x = out_of_state_total,
y = early_career_pay),
col = '#1283B8')+
geom_line(aes(x = out_of_state_total,
y = mid_career_pay),
col = '#E00211') +
labs(title = 'Relationship between tuition and projected pay',
# subtitle = 'Early career pay in blue \n mid career pay in red',
x = 'Amount of tuition',
y = 'Amount of pay')+
theme_classic()+
theme(panel.grid = element_blank(),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(face = 'bold',
size = 18,
hjust = 0.5),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14))
plot1/plot2
